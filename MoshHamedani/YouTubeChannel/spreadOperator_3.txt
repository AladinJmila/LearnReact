
Another JavaScript feature that we use a lot in React is the Spread Operator.

Let's say we have two arrays: 'first' with three numbers, and 'second' with three more numbers.

/**Read code**/

Let's say we want to combine these two arrays.

One way is to combine them is like this:
constant 'combined ' and we get the 'first' to call the concat() method and pass the 'second' array. This is the old way of doing things.

/**Read code**/

Now, with the Spread Operator we can rewrite the code like this:
constant 'combined', we create a new array '[]' we spread '...' the 'first' array, and that means will get every item in this array and put it in our new array. And then, similarly we'll spread '...' the 'second' array. So the spread operator is represented using three dots '...'

/**Read code**/

On the first glance, you may say there is really not much of a difference between the first and second statements in terms of the length, so why is this an improvement?
Well, what if we wanted to add an element somewhere in the middle. We can simply come here and add an element right in the middle. But when using the concat() method if you want to get the same results, our code would end up looking more complicated.

/**Read code**/

Similarly, we can add another element here at the end. We can visually see what the end result will look like, so we have a new array, first we spread all the items in the 'first' array and we have 'a' and so on. So basically, when we apply the Spread Operator on an array, we get each individual item in that array

/**Read code**/

Now, using the Spread Operator we can easily clone an array. Let me show you:
Say we want to clone the 'first' array but define a constant 'clone', we create a new array and simply spread '...' the 'first' array. Now if we log 'first' and 'clone', we see they are identical.

/*********************************************/

Now we can also apply the Spread Operator on Objects, so we're going to rewrite this code but use an object instead.

Let's define a constant call it 'first', set it to an object '{}' with the 'name' property set to 'Mosh'. Then a 'second' object with another property, 'job' set to 'instructor'

/**Read code**/

let's say we want to combine these two objects into one object. We declare a constant called 'combined', we create a new object '{}' - note that previously we created array because we were combining two arrays - now we are combining two objects, we create a new object. Now in this new object we want to add all the properties of the 'first' object, so we spread '...' the 'first' object, then we'll also spread '...' the 'second' object and we can optionally add other properties, let's say 'location' 'Australia'.
Now if you log this 'combined' object on the console, we get an object with three properties.

/**Read code**/

Similarly, we can use the Spread Operator to clone and object.
